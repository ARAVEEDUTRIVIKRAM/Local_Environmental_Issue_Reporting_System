# app name
spring.application.name=LocalEnvironmentalIssueReportingSystem

# datasource: read from env vars (no hardcoded password)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/issue_reporter}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:}
spring.datasource.hikari.maximum-pool-size=10

# JPA
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Flyway (adopt existing DB if not empty)
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=1

# Server port
server.port=${SERVER_PORT:8888}

# JWT secret (must be provided via env)
app.jwt.secret=${APP_JWT_SECRET:}
app.jwt.expiration-ms=86400000

# Actuator
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=never

# static uploads
spring.mvc.static-path-pattern=/uploads/**
spring.web.resources.static-locations=file:uploads/

# Mail (read from environment; leave empty in repo)
spring.mail.host=${SPRING_MAIL_HOST:}
spring.mail.port=${SPRING_MAIL_PORT:587}
spring.mail.username=${SPRING_MAIL_USERNAME:}
spring.mail.password=${SPRING_MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

